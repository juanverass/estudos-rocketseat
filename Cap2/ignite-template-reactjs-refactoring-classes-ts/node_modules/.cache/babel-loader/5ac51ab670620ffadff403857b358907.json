{"ast":null,"code":"var _jsxFileName = \"E:\\\\Repos\\\\ignite-aulas\\\\reactjs\\\\Cap2\\\\ignite-template-reactjs-refactoring-classes-ts\\\\src\\\\components\\\\Modal\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    setIsOpen,\n    children\n  } = _ref;\n  const [modalStatus, setModalStatus] = useState(isOpen);\n  useEffect(() => {\n    if (modalStatus !== isOpen) {\n      setModalStatus(isOpen);\n    }\n  }, [isOpen, modalStatus]);\n  return /*#__PURE__*/_jsxDEV(ReactModal, {\n    shouldCloseOnOverlayClick: !false,\n    onRequestClose: setIsOpen,\n    isOpen: modalStatus,\n    ariaHideApp: false,\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        background: '#F0F0F5',\n        color: '#000000',\n        borderRadius: '8px',\n        width: '736px',\n        border: 'none'\n      },\n      overlay: {\n        backgroundColor: '#121214e6'\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Modal, \"LolHJpuQLl7/71Av49oTdy0sDFE=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["useState","useEffect","ReactModal","Modal","isOpen","setIsOpen","children","modalStatus","setModalStatus","content","top","left","right","bottom","marginRight","transform","background","color","borderRadius","width","border","overlay","backgroundColor"],"sources":["E:/Repos/ignite-aulas/reactjs/Cap2/ignite-template-reactjs-refactoring-classes-ts/src/components/Modal/index.tsx"],"sourcesContent":["import { ReactNode, useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\n\ninterface ModalProps{\n  isOpen:boolean,\n  setIsOpen: () => void,\n  children: ReactNode,\n\n}\n\nconst Modal = ({isOpen,setIsOpen,children}:ModalProps)=>{\n  const [modalStatus, setModalStatus] = useState(isOpen);\n  useEffect(()=>{\n    if(modalStatus!==isOpen){\n      setModalStatus(isOpen)\n    }\n  },[isOpen,modalStatus])\n\n  \n\n    return (\n      <ReactModal\n        shouldCloseOnOverlayClick={!false}\n        onRequestClose={setIsOpen}\n        isOpen={modalStatus}\n        ariaHideApp={false}\n        style={{\n          content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n            background: '#F0F0F5',\n            color: '#000000',\n            borderRadius: '8px',\n            width: '736px',\n            border: 'none',\n          },\n          overlay: {\n            backgroundColor: '#121214e6',\n          },\n        }}\n      >\n        \n      </ReactModal>\n    );\n  \n};\n\nexport default Modal;"],"mappings":";;;AAAA,SAAoBA,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,UAAP,MAAuB,aAAvB;;;AASA,MAAMC,KAAK,GAAG,QAA0C;EAAA;;EAAA,IAAzC;IAACC,MAAD;IAAQC,SAAR;IAAkBC;EAAlB,CAAyC;EACtD,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAACI,MAAD,CAA9C;EACAH,SAAS,CAAC,MAAI;IACZ,IAAGM,WAAW,KAAGH,MAAjB,EAAwB;MACtBI,cAAc,CAACJ,MAAD,CAAd;IACD;EACF,CAJQ,EAIP,CAACA,MAAD,EAAQG,WAAR,CAJO,CAAT;EAQE,oBACE,QAAC,UAAD;IACE,yBAAyB,EAAE,CAAC,KAD9B;IAEE,cAAc,EAAEF,SAFlB;IAGE,MAAM,EAAEE,WAHV;IAIE,WAAW,EAAE,KAJf;IAKE,KAAK,EAAE;MACLE,OAAO,EAAE;QACPC,GAAG,EAAE,KADE;QAEPC,IAAI,EAAE,KAFC;QAGPC,KAAK,EAAE,MAHA;QAIPC,MAAM,EAAE,MAJD;QAKPC,WAAW,EAAE,MALN;QAMPC,SAAS,EAAE,uBANJ;QAOPC,UAAU,EAAE,SAPL;QAQPC,KAAK,EAAE,SARA;QASPC,YAAY,EAAE,KATP;QAUPC,KAAK,EAAE,OAVA;QAWPC,MAAM,EAAE;MAXD,CADJ;MAcLC,OAAO,EAAE;QACPC,eAAe,EAAE;MADV;IAdJ;EALT;IAAA;IAAA;IAAA;EAAA,QADF;AA6BH,CAvCD;;GAAMnB,K;;KAAAA,K;AAyCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}