{"ast":null,"code":"var _jsxFileName = \"E:\\\\Repos\\\\ignite-aulas\\\\reactjs\\\\Cap2\\\\ignite-template-reactjs-criando-um-hook-de-carrinho-de-compras\\\\src\\\\hooks\\\\useCart.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext({});\nexport function CartProvider(_ref) {\n  _s();\n\n  var _prevCartRef$current;\n\n  let {\n    children\n  } = _ref;\n  const [cart, setCart] = useState(() => {\n    const storagedCart = localStorage.getItem('@RocketShoes:cart');\n\n    if (storagedCart) {\n      return JSON.parse(storagedCart);\n    }\n\n    return [];\n  });\n  const prevCartRef = useRef();\n  useEffect(() => {\n    prevCartRef.current = cart;\n  });\n  const cartPreviousValue = (_prevCartRef$current = prevCartRef.current) !== null && _prevCartRef$current !== void 0 ? _prevCartRef$current : cart;\n\n  const addProduct = async productId => {\n    try {\n      const updatedCart = [...cart];\n      const productExists = updatedCart.find(product => product.id === productId);\n      const stock = await api.get(`/stock/${productId}`);\n      const stockAmount = stock.data.amount;\n      const currentAmount = productExists ? productExists.amount : 0;\n      const amount = currentAmount + 1;\n\n      if (amount > stockAmount) {\n        toast.error('Quantidade solicitada fora de estoque');\n        return;\n      }\n\n      if (productExists) {\n        productExists.amount = amount;\n      } else {\n        const product = await api.get(`/products/${productId}`);\n        const newProduct = { ...product.data,\n          amount: 1\n        };\n        updatedCart.push(newProduct);\n      }\n\n      setCart(updatedCart);\n      localStorage.setItem('@RocketShoes:cart', JSON.stringify(updatedCart));\n    } catch {\n      toast.error('Erro na adição do produto');\n    }\n  };\n\n  const removeProduct = productId => {\n    try {\n      const updatedCart = [...cart];\n      const productIndex = updatedCart.findIndex(product => product.id === productId);\n\n      if (productIndex >= 0) {\n        updatedCart.splice(productIndex, 1);\n        setCart(updatedCart);\n        localStorage.setItem('@RocketShoes:cart', JSON.stringify(updatedCart));\n      } else {\n        throw Error();\n      }\n    } catch {\n      toast.error('Erro na remoção do produto');\n    }\n  };\n\n  const updateProductAmount = async _ref2 => {\n    let {\n      productId,\n      amount\n    } = _ref2;\n\n    try {\n      if (amount <= 0) {\n        return;\n      }\n\n      const stock = await api.get(`/stock/${productId}`);\n      const stockAmount = stock.data.amount;\n\n      if (amount > stockAmount) {\n        toast.error('Quantidade solicitada fora de estoque');\n        return;\n      }\n\n      const updatedCart = [...cart];\n      const productExists = updatedCart.find(product => product.id === productId);\n\n      if (productExists) {\n        productExists.amount = amount;\n        setCart(updatedCart);\n        localStorage.setItem('@RocketShoes:cart', JSON.stringify(updatedCart));\n      } else {\n        throw Error();\n      }\n    } catch {\n      toast.error('Erro na alteração de quantidade do produto');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addProduct,\n      removeProduct,\n      updateProductAmount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartProvider, \"+n5/u0O7Kk8as1/Lq2rm3Be0kUs=\");\n\n_c = CartProvider;\nexport function useCart() {\n  _s2();\n\n  const context = useContext(CartContext);\n  return context;\n}\n\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useRef","useState","toast","api","CartContext","CartProvider","children","cart","setCart","storagedCart","localStorage","getItem","JSON","parse","prevCartRef","current","cartPreviousValue","addProduct","productId","updatedCart","productExists","find","product","id","stock","get","stockAmount","data","amount","currentAmount","error","newProduct","push","setItem","stringify","removeProduct","productIndex","findIndex","splice","Error","updateProductAmount","useCart","context"],"sources":["E:/Repos/ignite-aulas/reactjs/Cap2/ignite-template-reactjs-criando-um-hook-de-carrinho-de-compras/src/hooks/useCart.tsx"],"sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { api } from '../services/api';\nimport { Product, Stock } from '../types';\n\ninterface CartProviderProps {\n  children: ReactNode;\n}\n\ninterface UpdateProductAmount {\n  productId: number;\n  amount: number;\n}\n\ninterface CartContextData {\n  cart: Product[];\n  addProduct: (productId: number) => Promise<void>;\n  removeProduct: (productId: number) => void;\n  updateProductAmount: ({ productId, amount }: UpdateProductAmount) => void;\n}\n\nconst CartContext = createContext<CartContextData>({} as CartContextData);\n\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\n  const [cart, setCart] = useState<Product[]>(() => {\n    const storagedCart = localStorage.getItem('@RocketShoes:cart')\n\n    if (storagedCart) {\n      return JSON.parse(storagedCart);\n    }\n\n    return [];\n  });\n\n  const prevCartRef = useRef<Product[]>();\n\n  useEffect(() => {\n    prevCartRef.current = cart;\n  })\n\n  const cartPreviousValue = prevCartRef.current ?? cart;\n\n  const addProduct = async (productId: number) => {\n    try {\n      const updatedCart = [...cart];\n      const productExists = updatedCart.find(product => product.id === productId);\n\n      const stock = await api.get(`/stock/${productId}`);\n\n      const stockAmount = stock.data.amount;\n      const currentAmount = productExists ? productExists.amount : 0;\n      const amount = currentAmount + 1;\n\n      if(amount > stockAmount) {\n        toast.error('Quantidade solicitada fora de estoque');\n        return;\n      }\n\n      if(productExists) {\n        productExists.amount = amount;\n      } else {\n        const product = await api.get(`/products/${productId}`);\n\n        const newProduct = {\n          ...product.data,\n          amount: 1\n        }\n        updatedCart.push(newProduct);\n      }\n\n      setCart(updatedCart);\n      localStorage.setItem('@RocketShoes:cart', JSON.stringify(updatedCart))\n    } catch {\n      toast.error('Erro na adição do produto');\n    }\n  };\n\n  const removeProduct = (productId: number) => {\n    try {\n      const updatedCart = [...cart];\n      const productIndex = updatedCart.findIndex(product => product.id === productId);\n\n      if(productIndex >= 0) {\n        updatedCart.splice(productIndex, 1);\n        setCart(updatedCart);\n        localStorage.setItem('@RocketShoes:cart', JSON.stringify(updatedCart))\n      } else {\n        throw Error();\n      }\n    } catch {\n      toast.error('Erro na remoção do produto');\n    }\n  };\n\n  const updateProductAmount = async ({\n    productId,\n    amount,\n  }: UpdateProductAmount) => {\n    try {\n      if(amount <= 0){\n        return;\n      }\n\n      const stock = await api.get(`/stock/${productId}`);\n\n      const stockAmount = stock.data.amount;\n\n      if(amount > stockAmount){\n        toast.error('Quantidade solicitada fora de estoque');\n        return;\n      }\n\n      const updatedCart = [...cart];\n      const productExists = updatedCart.find(product => product.id === productId);\n\n      if(productExists) {\n        productExists.amount = amount;\n        setCart(updatedCart);\n        localStorage.setItem('@RocketShoes:cart', JSON.stringify(updatedCart))\n      } else {\n        throw Error();\n      }\n    } catch {\n      toast.error('Erro na alteração de quantidade do produto');\n    }\n  };\n\n  return (\n    <CartContext.Provider\n      value={{ cart, addProduct, removeProduct, updateProductAmount }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart(): CartContextData {\n  const context = useContext(CartContext);\n\n  return context;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}