{"ast":null,"code":"var _jsxFileName = \"E:\\\\Repos\\\\ignite-aulas\\\\reactjs\\\\Cap2\\\\ignite-template-reactjs-refactoring-classes-ts\\\\src\\\\components\\\\Input\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = _ref => {\n  _s();\n\n  let {\n    name,\n    icon: Icon,\n    ...rest\n  } = _ref;\n  const inputRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const {\n    fieldName,\n    defaultValue,\n    registerField\n  } = useField(name);\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n  const handleInputBlur = useCallback(() => {\n    var _inputRef$current;\n\n    setIsFocused(false);\n    setIsFilled(!!((_inputRef$current = inputRef.current) !== null && _inputRef$current !== void 0 && _inputRef$current.value));\n  }, []);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value'\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    isFilled: isFilled,\n    isFocused: isFocused,\n    children: [Icon && /*#__PURE__*/_jsxDEV(Icon, {\n      size: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onFocus: handleInputFocus,\n      onBlur: handleInputBlur,\n      defaultValue: defaultValue,\n      ref: inputRef,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"BIj2FT8frZjIcXRVZKj0WNIxfpE=\", false, function () {\n  return [useField];\n});\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","useField","Container","Input","name","icon","Icon","rest","inputRef","isFocused","setIsFocused","isFilled","setIsFilled","fieldName","defaultValue","registerField","handleInputFocus","handleInputBlur","current","value","ref","path"],"sources":["E:/Repos/ignite-aulas/reactjs/Cap2/ignite-template-reactjs-refactoring-classes-ts/src/components/Input/index.tsx"],"sourcesContent":["import React, {\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n \n} from 'react';\n\nimport { useField } from '@unform/core';\nimport  {  IconType  }  from  'react-icons' ;\n\nimport { Container } from './styles';\n\ninterface  InputProps  {\n  name : string ,\n  icon ?: IconType ,\n}\n\nconst Input = ({ name, icon: Icon, ...rest }:InputProps & React.InputHTMLAttributes<HTMLInputElement>) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const { fieldName, defaultValue, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n    </Container>\n  );\n};\n\nexport default Input;"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,SADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,WAJF,QAMO,OANP;AAQA,SAASC,QAAT,QAAyB,cAAzB;AAGA,SAASC,SAAT,QAA0B,UAA1B;;;AAOA,MAAMC,KAAK,GAAG,QAA4F;EAAA;;EAAA,IAA3F;IAAEC,IAAF;IAAQC,IAAI,EAAEC,IAAd;IAAoB,GAAGC;EAAvB,CAA2F;EACxG,MAAMC,QAAQ,GAAGV,MAAM,CAAmB,IAAnB,CAAvB;EAEA,MAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;EAEA,MAAM;IAAEc,SAAF;IAAaC,YAAb;IAA2BC;EAA3B,IAA6Cd,QAAQ,CAACG,IAAD,CAA3D;EAEA,MAAMY,gBAAgB,GAAGhB,WAAW,CAAC,MAAM;IACzCU,YAAY,CAAC,IAAD,CAAZ;EACD,CAFmC,EAEjC,EAFiC,CAApC;EAIA,MAAMO,eAAe,GAAGjB,WAAW,CAAC,MAAM;IAAA;;IACxCU,YAAY,CAAC,KAAD,CAAZ;IAEAE,WAAW,CAAC,CAAC,uBAACJ,QAAQ,CAACU,OAAV,8CAAC,kBAAkBC,KAAnB,CAAF,CAAX;EACD,CAJkC,EAIhC,EAJgC,CAAnC;EAMAtB,SAAS,CAAC,MAAM;IACdkB,aAAa,CAAC;MACZX,IAAI,EAAES,SADM;MAEZO,GAAG,EAAEZ,QAAQ,CAACU,OAFF;MAGZG,IAAI,EAAE;IAHM,CAAD,CAAb;EAKD,CANQ,EAMN,CAACR,SAAD,EAAYE,aAAZ,CANM,CAAT;EAQA,oBACE,QAAC,SAAD;IAAW,QAAQ,EAAEJ,QAArB;IAA+B,SAAS,EAAEF,SAA1C;IAAA,WACGH,IAAI,iBAAI,QAAC,IAAD;MAAM,IAAI,EAAE;IAAZ;MAAA;MAAA;MAAA;IAAA,QADX,eAGE;MACE,OAAO,EAAEU,gBADX;MAEE,MAAM,EAAEC,eAFV;MAGE,YAAY,EAAEH,YAHhB;MAIE,GAAG,EAAEN,QAJP;MAAA,GAKMD;IALN;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAvCD;;GAAMJ,K;UAM+CF,Q;;;KAN/CE,K;AAyCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}