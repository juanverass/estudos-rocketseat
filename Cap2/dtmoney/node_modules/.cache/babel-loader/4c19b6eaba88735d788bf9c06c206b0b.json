{"ast":null,"code":"var _jsxFileName = \"E:\\\\Repos\\\\ignite-aulas\\\\reactjs\\\\Capitulo 2\\\\dtmoney\\\\src\\\\TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport { api } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext([]);\nexport function TransactionsProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n\n  function createTransaction(transaction) {\n    api.post('/transactions', transaction);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: transactions,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TransactionsProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","api","TransactionsContext","TransactionsProvider","children","transactions","setTransactions","get","then","response","data","createTransaction","transaction","post"],"sources":["E:/Repos/ignite-aulas/reactjs/Capitulo 2/dtmoney/src/TransactionsContext.tsx"],"sourcesContent":["import { createContext, ReactNode, useEffect, useState } from 'react'\r\nimport { api } from './services/api';\r\n\r\ninterface Transaction {\r\n    id: number,\r\n    title: string;\r\n    amount: number;\r\n    type: string;\r\n    category: string;\r\n    createdAt: string;\r\n}\r\n\r\n// interface TransactionInput {\r\n//     title: string;\r\n//     amount: number;\r\n//     type: string;\r\n//     category: string;\r\n// }\r\n\r\ntype TransactionInput = Omit<Transaction, 'id' | 'createdAt'>\r\n\r\ninterface TransactionsProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\nexport const TransactionsContext = createContext<Transaction[]>([]);\r\n\r\nexport function TransactionsProvider({ children } : TransactionsProviderProps) {\r\n    const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n\r\n    useEffect(() => {\r\n        api.get('transactions')\r\n        .then(response => setTransactions(response.data.transactions))\r\n    }, []);\r\n\r\n    function createTransaction(transaction: TransactionInput){\r\n        api.post('/transactions', transaction)\r\n    }\r\n\r\n    return (\r\n        <TransactionsContext.Provider value={transactions}>\r\n            {children}\r\n        </TransactionsContext.Provider>\r\n    );\r\n}"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAwBA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAAgB,EAAhB,CAAzC;AAEP,OAAO,SAASK,oBAAT,OAAwE;EAAA;;EAAA,IAA1C;IAAEC;EAAF,CAA0C;EAC3E,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAgB,EAAhB,CAAhD;EAEAD,SAAS,CAAC,MAAM;IACZE,GAAG,CAACM,GAAJ,CAAQ,cAAR,EACCC,IADD,CACMC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CADjC;EAEH,CAHQ,EAGN,EAHM,CAAT;;EAKA,SAASM,iBAAT,CAA2BC,WAA3B,EAAyD;IACrDX,GAAG,CAACY,IAAJ,CAAS,eAAT,EAA0BD,WAA1B;EACH;;EAED,oBACI,QAAC,mBAAD,CAAqB,QAArB;IAA8B,KAAK,EAAEP,YAArC;IAAA,UACKD;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GAjBeD,oB;;KAAAA,oB"},"metadata":{},"sourceType":"module"}